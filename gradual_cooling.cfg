[gcode_macro KEEP_ALIVE]
gcode:
  UPDATE_DELAYED_GCODE ID=keep_alive DURATION=60  ; Reschedule itself every 60 seconds

# START_GRADUAL_COOLING TARGET=<final_temperature> STEP=<temperature_decrement> INTERVAL=<time_between_decrements in seconds>
[gcode_macro START_GRADUAL_COOLING]
description: Initiates gradual bed cooling immediately
gcode:
  {% set target_temp = params.TARGET|default(40)|int %}
  {% set step_temp = params.STEP|default(5)|int %}
  {% set interval = params.INTERVAL|default(300)|int %}
  {% set initial_temp = printer.heater_bed.target %}
  {% set first_temp = initial_temp - step_temp %}

  {% if initial_temp > target_temp %}
    M118 Starting gradual bed cooling from {initial_temp}°C to {target_temp}°C.

    ; Set the first temperature step immediately
    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={first_temp}
    M118 First temperature step applied: {first_temp}°C.

    ; Store variables for later steps
    SET_GCODE_VARIABLE MACRO=EXECUTE_GRADUAL_COOLING VARIABLE=target VALUE={target_temp}
    SET_GCODE_VARIABLE MACRO=EXECUTE_GRADUAL_COOLING VARIABLE=step VALUE={step_temp}
    SET_GCODE_VARIABLE MACRO=EXECUTE_GRADUAL_COOLING VARIABLE=interval VALUE={interval}

    ; Schedule the next temperature step
    UPDATE_DELAYED_GCODE ID=gradual_cooling DURATION={interval}
  {% else %}
    M118 Bed temperature is already at or below the target of {target_temp}°C.
  {% endif %}

[gcode_macro EXECUTE_GRADUAL_COOLING]
variable_target: 40
variable_step: 5
variable_interval: 300
variable_last_set: 0  ; Track last set temperature
gcode:
  {% set current_temp = printer.heater_bed.temperature %}
  {% set last_set_temp = printer.heater_bed.target %}
  {% set next_temp = last_set_temp - step %}

  ; Check if we have actually reached the last set temperature
  {% if current_temp <= last_set_temp + 0.5 %}  ; Allow a 0.5°C margin

    ; If we haven't yet reached the final target, apply the next step
    {% if last_set_temp > target %}
      M140 S{next_temp}
      M118 Bed temperature step applied: {next_temp}°C. Next check in {interval} seconds.
      UPDATE_DELAYED_GCODE ID=gradual_cooling DURATION={interval}
    {% else %}
      M140 S0  ; Turn off the heater only after reaching the target
      M118 Bed temperature has reached the final target of {target}°C. Heater bed is now OFF.
      UPDATE_DELAYED_GCODE ID=keep_alive_loop DURATION=0  ; Stop keep-alive process
      TURN_OFF_HEATERS
      POWER_OFF_PRINTER
    {% endif %}

  {% else %}
    ; If bed is still cooling down, recheck after interval instead of stepping down too soon
    M118 Skipping temperature step because the bed is still cooling. Current: {current_temp}°C, last set: {last_set_temp}°C.
    UPDATE_DELAYED_GCODE ID=gradual_cooling DURATION={interval}
  {% endif %}


[delayed_gcode gradual_cooling]
gcode:
  EXECUTE_GRADUAL_COOLING

[delayed_gcode keep_alive_loop]
gcode:
  KEEP_ALIVE


# [gcode_macro EXAMPLE]
# gcode:
#   {% if printer.heater_bed.temperature > 50 %}
#     M118 Bed is hot at { printer.heater_bed.temperature }°C.
#   {% else %}
#     M118 Bed is cool.
#   {% endif %}
